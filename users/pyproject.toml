[tool.poetry]
name = "users"
version = "0.1.0"
description = ""
authors = ["Vitaly Kotov <catvitalio@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
pydantic = {extras = ["email"], version = "^2.9.2"}
pydantic-settings = "^2.6.0"
SQLAlchemy = "^2.0.36"
alembic = "^1.13.3"
faststream = {extras = ["cli", "rabbit"], version = "^0.5.28"}
passlib = "^1.7.4"
asyncpg = "^0.30.0"
python-jose = "^3.3.0"


[tool.poetry.group.dev.dependencies]
ruff = "^0.7.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100
indent-width = 4
exclude = [
    ".pytype",
    ".ruff_cache",
    "__pypackages__",
    "migrations",
    "__init__.py",
]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"

[tool.ruff.lint]
select = ["A", "F", "B", "C", "I", "T", "Q", "COM"]
ignore = ["B904", "B008"]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.mccabe]
max-complexity = 7

[tool.ruff.lint.isort]
no-lines-before = ["local-folder"]
section-order = ["future", "standard-library", "first-party", "third-party", "src", "local-folder"]

[tool.ruff.lint.isort.sections]
src = ["config", "migrations", "tests", "src", "deps", "dtos", "events", "services", "exceptions", "constants"]
